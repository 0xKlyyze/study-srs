        /* --- CSS Variables (Combined & Enhanced) --- */
        :root {
            /* Base Theme */
            --bg-gradient-start: #1a1a2e; --bg-gradient-end: #16213e;
            --primary-bg: #1f2a40; --secondary-bg: #2c3a56;
            --tertiary-bg: #1a1a2e; /* Card BG often darker/primary */
            --border-color: #4a5a7e; --hover-border-color: #6a7aac;
            --text-primary: #e8e8e8; /* Slightly brighter text */
            --text-secondary: #b0b0d0; /* Slightly brighter secondary text */
            --icon-color: #b0b0d0; --icon-hover-color: #ffffff;

            /* Accents */
            --accent-blue: #5bc0de; --accent-green: #5cb85c;
            --accent-yellow: #f0ad4e; --accent-red: #d9534f;
            --accent-purple: #6a11cb; --accent-orange: #ff851b;
            --accent-pink: #e83e8c; --accent-teal: #20c997;

             /* Effects & UI Elements */
             --modal-overlay-bg: rgba(10, 10, 20, 0.7);
             --shadow-color: rgba(0, 0, 0, 0.5); /* Slightly darker shadow */
             --pill-bg: rgba(31, 42, 64, 0.85); /* Slightly less transparent pill */
             --card-bg: var(--secondary-bg); /* Use secondary for card base */
             --action-btn-bg: var(--primary-bg); /* Darker action buttons */
             --action-btn-hover-bg: var(--secondary-bg);
             --flip-btn-bg: var(--accent-blue);
             --flip-btn-text: var(--primary-bg);
             --flip-btn-glow: rgba(91, 192, 222, 0.6); /* Glow for flip button */
             --quality-btn-good-glow: rgba(91, 192, 222, 0.5);
             --quality-btn-easy-glow: rgba(92, 184, 92, 0.5);
             --ai-glow-start: #6a11cb; --ai-glow-end: #2575fc; /* Purple to Blue */
             --ai-glow-color-1: rgba(106, 17, 203, 0.6); /* Purpleish */
             --ai-glow-color-2: rgba(37, 117, 252, 0.5); /* Blueish */
             --tilt-max: 6deg; /* Max degrees for tilt */
             --star-glow-color: rgba(240, 173, 78, 0.7); /* Yellow */
             --delete-glow-color: rgba(217, 83, 79, 0.6); /* Red */
             --edit-glow-color: rgba(91, 192, 222, 0.6); /* Blue (example) */
             --skip-glow-color: rgba(100, 110, 130, 0.6); /* Greyish (example) */
             --bury-glow-color: rgba(92, 184, 92, 0.6); /* Green (example) */


                --btn-again: linear-gradient(145deg, #ab2718ec, #5f170fee);
                --btn-hard: linear-gradient(145deg, #af761bec, #6c5e0dec);
                --btn-good: linear-gradient(145deg, #1d75b0e8, #0f466aeb);
                --btn-easy: linear-gradient(145deg, #1ba036ed, #0f6525ed);
                
                /* Modern box-shadows with color matching */
                /* Improved shadows with color matching */
                --shadow-again: 0 4px 15px rgba(217, 83, 79, 0.3);
                --shadow-hard: 0 4px 15px rgba(240, 173, 78, 0.3);
                --shadow-good: 0 4px 15px rgba(52, 152, 219, 0.3);
                --shadow-easy: 0 4px 15px rgba(46, 204, 113, 0.3);
                
        /* Enhanced hover shadows */
        --shadow-again-hover: 0 6px 20px rgba(217, 83, 79, 0.45);
        --shadow-hard-hover: 0 6px 20px rgba(240, 173, 78, 0.45);
        --shadow-good-hover: 0 6px 20px rgba(52, 152, 219, 0.45);
        --shadow-easy-hover: 0 6px 20px rgba(46, 204, 113, 0.45);

             --ai-panel-width: 50%; /* Width of the AI panel relative to study area */
             --card-reduced-width-factor: 0.6; /* Card becomes 60% of original width */
             --pill-height-approx: 5rem; /* Estimated pill height + top space in rem */
             /* Target height when AI active - can use vh or rely on stretch */

             --ai-panel-bg: var(--primary-bg);
             --content-target-height-ai: 93.5vh; /* Adjust target height if needed */
             --pill-target-transform: translateX(-50%) translateY(-5.5rem); /* Define pill move target */
             --content-max-height: 90vh; /* Allow more initial vertical space */
             --panel-transition-duration: 0.45s; /* Define duration */
             --panel-transition-timing: cubic-bezier(0.4, 0, 0.2, 1); /* Smoother ease */
             --action-btn-active-scale: 1.15; /* How much active buttons scale */

              /* NEW Variables for Explanation Blocks */
    --block-border-radius: 16px; /* Consistent rounding */
    --block-border-width: 1px;
    --block-border-color: var(--border-color);
    --block-bg-color-base: rgba(44, 58, 86, 0.1); /* Subtle base background */
    --block-header-padding: 0.6em 0.8rem;
    --block-content-padding: 0.8rem 1.2rem; /* Padding when expanded */
    --block-peek-height: 2em; /* How much to show when collapsed */
    --block-blur-amount: 7px; /* Increased blur */
    --block-fade-height: 1.5em; /* Height of the fade gradient */
    --block-transition-duration: 0.35s;
    --block-transition-timing: cubic-bezier(0.4, 0, 0.2, 1);
    --block-selected-outline-color: var(--accent-blue);
    --block-selected-outline-width: 2px;
    --block-selected-shadow: 0 0 8px rgba(91, 192, 222, 0.5); /* Glow effect */
     /* ... existing variables ... */
     --block-header-bg-opacity: 0.25; /* Opacity for header backgrounds */
     --block-selected-border-width: 2px; /* Make selected border thicker */
     --block-selected-shadow: 0 0 10px 2px var(--block-selected-outline-color); /* Stronger glow */

    /* Type specific colors (add if not already defined) */
    --accent-definition: var(--accent-blue);
    --accent-theoreme: var(--accent-yellow);
    --accent-proposition: var(--accent-green);
    --accent-lemme: var(--accent-red);
    --accent-corollaire: var(--accent-teal); /* Example */
    --accent-exemple: var(--accent-orange); /* Example */
    --accent-explication: var(--accent-purple);
    --accent-remarque: var(--text-secondary); /* Example */
    --accent-preuve: var(--accent-pink); /* Example */
    --accent-text: var(--border-color); /* Use border color for text block */
    --accent-latex-block: #777; /* Example */
    --accent-error: var(--accent-red);
    --focus-glow-color: rgba(106, 17, 203, 0.6); /* Purple glow */
    --focus-glow-hover-color: rgba(106, 17, 203, 0.8);
    --focus-active-glow-color: rgba(106, 17, 203, 0.6); /* Purple glow */

        /* ... existing variables ... */
        --hint-chars-unblurred: 10; /* Approx number of chars to show */
        --hint-overlay-padding: var(--block-content-padding); /* Match content padding */
            /* Padding is now applied to the inner content divs */
    --block-content-padding-top-bottom: 0.8rem;
    --block-content-padding-left-right: 1.2rem;
    --block-peek-height: 2.6em;
    --hint-preview-max-height: 5.5em; /* Adjust as needed */
        }

        /* --- General Styles & SCALING --- */
        *, *::before, *::after {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        html {
             font-size: 19px; /* Base font size increased (adjust as needed) */
            /* Prevent vertical scrollbar caused by minor overflows */
            overflow-y: hidden;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, var(--bg-gradient-start), var(--bg-gradient-end));
            align-items: center; /* This is what's missing! Center everything horizontally */
            color: var(--text-primary);
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            overflow: hidden;
            padding-top: 0rem; /* Initial padding */
            transition: padding-top 0.5s ease; /* <<< ADD PADDING TRANSITION */
        }

       /* --- Focus Mode Styling (Ensure these are robust) --- */
body.focus-mode-active .session-pill,
body.focus-mode-active .card-actions-column { /* Hide both columns */
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    transition: opacity 0.3s ease, visibility 0s linear 0.3s;
}

body.focus-mode-active {
    /* Optional: Smoother transition for padding */
    transition: padding-top 0.4s ease;
    padding-top: 0.5vh; /* Further reduced padding */
    overflow : hidden;
}

/* --- Container for Quality Buttons in Focus Mode --- */
body.focus-mode-active .quality-buttons {
    /* Apply the desired small gap */
    gap: 0.2rem; /* Start with 0.2rem, adjust down if it works */

    /* Ensure it inherits/maintains necessary positioning from the non-focus flipped state */
    position: absolute;
    left: 50%;
    width: 100%; /* Or adjust width as needed for focus mode */
    max-width: calc(100% - 4rem);
    bottom: 1rem; /* Position relative to card bottom */
    transform: translateX(-50%) translateY(0%); /* Center horizontally */
    justify-content: center; /* Center buttons if space-around gives too much space */
    margin-right : 10px;

    /* Keep transitions */
    transition: gap 0.3s ease, bottom 0.3s ease, opacity 0.3s ease, transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.3s, visibility 0s linear 0.6s;
}

/* --- Individual Quality Buttons in Focus Mode --- */
body.focus-mode-active .quality-btn {
    /* Apply scaling */
    transform: scale(0.7);
    /* REMOVE conflicting transform: translateX(-50%); */

    opacity: 0.8;
    margin: 0; /* Keep margin reset */
    margin-bottom : 10px;

    /* REMOVE conflicting absolute positioning */
    /* bottom: -7rem; */
    position: relative; /* Ensure buttons stay in the flex flow */

    pointer-events: auto;

    /* Keep transitions */
    transition: transform 0.3s ease, opacity 0.3s ease;
}

body.focus-mode-active .study-area {
    padding-top: 0;
    max-width: 1000px; /* Keep max-width */
    height: calc(100vh - 2vh);
    /* <<< ADD Explicit Centering >>> */
    margin-left: 160px;
    margin-right: auto;
    /* Ensure it takes appropriate width if needed, max-width handles the limit */
    width: 100%; /* Take full available width up to max-width */
}

body.focus-mode-active .card-scene {
    width: 100%; /* Take full width of study-area */
    max-width: 1000px; /* Max width */
    height: 100%; /* Take full height of study-area */
    margin: 0 auto; /* Keep this to center within study-area */
    flex-grow: 1;
    min-height: 80vh;
}
/* --- End Focus Mode Styling --- */

                /* Allow body padding to reduce when AI active, moving content up */
        body.panel-active {
            padding-top: 1rem; /* <<< REDUCED PADDING WHEN AI ACTIVE */
        }

        /* --- Session Pill (Top Floating - Element 2) --- */
        .session-pill {
            position: fixed;
            top: 1.2rem; /* Use rem units */
            left: 50%;
            transform: translateX(-50%);
            z-index: 100;

            background-color: var(--pill-bg);
            -webkit-backdrop-filter: blur(6px);
            backdrop-filter: blur(6px);
            
            padding: 0.6rem 1.8rem; /* Use rem */
            border-radius: 50px;
            border: 1px solid var(--border-color);
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.4); /* Enhanced shadow */

            display: flex;
            align-items: center;
            gap: 1.8rem; /* Use rem */
            transition: transform 0.5s ease, height 0.5s ease, padding 0.5s ease, opacity 0.5s ease; /* Smooth transitions */
            opacity: 0.9;
        }

                /* Select pill based on class on body/study-area */
        /* When AI panel is active */
        /* IMPORTANT: Apply class to BODY or use sibling selector correctly */
        body.panel-active .session-pill { /* If class is on body */
            /* Move up much further */
            /* transform: translateX(-50%) translateY(calc(-1 * var(--pill-height-approx) * 0.9)); /* Move up 90% */
            transform: var(--pill-target-transform); /* Apply more drastic upward movement */
            /* Optional: Reduce height/padding slightly */
            padding-top: 0.4rem;
            padding-bottom: 0.4rem;
            /* Optional: Make slightly transparent? */
            /* opacity: 0.8; */
        }
        .session-stats {
            display: flex;
            gap: 1rem; /* Use rem */
            font-size: 0.9rem; /* Relative to base */
            color: var(--text-secondary);
            align-items: center; /* Align items vertically */
        }

        .session-stats span {
            padding: 0.3rem 0; /* Use rem */
            white-space: nowrap;
             display: flex; /* Use flex for icon alignment */
             align-items: center;
             gap: 0.4rem;
        }
        .session-stats span svg {
             width: 1rem;
             height: 1rem;
             fill: currentColor;
             opacity: 0.7;
        }
        /* Removed separators for cleaner look */
        .session-controls {
            display: flex; /* Make controls container a flex container too */
            align-items: center; /* Align items within controls (button, end session) */
            gap: 0.5rem; /* Space between focus toggle and end session button */
        }

        .session-controls .nav-btn {
            background-color: var(--tertiary-bg);
            color: var(--text-secondary);
            border: 1px solid var(--border-color);
            padding: 0.5rem 1.2rem; /* Use rem */
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.9rem; /* Relative to base */
            transition: all 0.2s ease;
            margin-left: 0.5rem;
             box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
             white-space: nowrap; /* Keep text on one line */
        }
        .session-controls .nav-btn:hover {
            background-color: var(--hover-border-color);
            color: var(--text-primary);
            border-color: var(--hover-border-color);
             box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }

        /* --- Focus Mode Pill Button --- */

        /* --- Focus Mode Pill Button --- */
        .session-controls .focus-toggle {
            display: inline-flex;    /* Align icon inside */
            align-items: center;     /* Center icon vertically */
            justify-content: center; /* Center icon horizontally */
            background: none;        /* No background */
            border: 1px solid var(--border-color);            /* Default border */
            padding: 0;              /* No padding */
            width: 2.2rem;           /* Explicit width */
            height: 2.2rem;          /* Explicit height (equal to width) */
            border-radius: 50%;      /* Make it perfectly round */
            color: var(--icon-color);/* Icon color */
            cursor: pointer;
            /* Add transition for box-shadow */
            transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease;
            flex-shrink: 0;          /* Prevent shrinking */
            box-sizing: border-box;  /* Consistent sizing */
            overflow: hidden;        /* Hide anything overflowing the circle */

            /* <<< ADD Subtle Purple Glow >>> */
            box-shadow: 0 0 6px 1px var(--focus-glow-color);
            border-color: color-mix(in srgb, var(--border-color) 70%, var(--accent-purple) 30%); /* Tint border slightly purple */
        }

        .session-controls .focus-toggle:hover {
            background-color: var(--secondary-bg); /* Subtle background on hover */
            color: var(--icon-hover-color);       /* Change icon color on hover */
            /* <<< Enhance Glow on Hover >>> */
            box-shadow: 0 0 9px 2px var(--focus-glow-hover-color);
            border-color: color-mix(in srgb, var(--hover-border-color) 60%, var(--accent-purple) 40%); /* Stronger purple tint */
        }
        
        .session-controls .focus-toggle svg {
            width: 1.2rem;           /* Control icon size */
            height: 1.2rem;
            fill: currentColor;      /* Use the button's text color for the icon */
            /* <<< Add subtle drop-shadow to SVG icon >>> */
            filter: drop-shadow(0 0 3px var(--focus-glow-color));
            transition: filter 0.2s ease; /* Add transition for filter */
        }
        .session-controls .focus-toggle:hover svg {
            /* <<< Enhance SVG glow on hover >>> */
            filter: drop-shadow(0 0 5px var(--focus-glow-hover-color));
        }
        
        
        /* Active state for focus button */
        .session-controls .focus-toggle.active {
            background-color: var(--focus-glow-color); /* Blue background when active */
            color: white;                         /* White icon when active */
            border-color: var(--focus-glow-hover-color);    /* Match border to background */
            /* <<< Change Glow to Blue when Active >>> */
            box-shadow: 0 0 8px 2px var(--focus-active-glow-color);
        }
        .session-controls .focus-toggle.active:hover {
            background-color: color-mix(in srgb, var(--focus-glow-hover-color) 90%, #fff); /* Slightly lighter blue on hover when active */
            /* <<< Enhance Blue Glow on Active Hover >>> */
            box-shadow: 0 0 10px 3px var(--focus-active-glow-color);
        }
        /* Adjust SVG glow when active */
        .session-controls .focus-toggle.active svg {
            filter: drop-shadow(0 0 4px var(--focus-active-glow-color));
        }
        .session-controls .focus-toggle.active:hover svg {
            filter: drop-shadow(0 0 6px var(--focus-active-glow-color));
        }
        
        
        /* Icon swapping */
        .session-controls .focus-toggle .icon-minimize { display: none; }
        .session-controls .focus-toggle.active .icon-minimize { display: inline-block; }
        .session-controls .focus-toggle.active .icon-maximize { display: none; }

        /* --- Main Study Area (Holds Actions and Card) --- */
        /* --- Main Study Area Layout Shift --- */
/* To ensure the study area layout maintains side-by-side arrangement */
/* --- Main Study Area --- */
.study-area {
    display: flex;
    gap: 1.5rem;
    align-items: center;
    justify-content: center; /* <<< Ensure this is center */
    padding: 0rem 1.2rem;
    padding-bottom: 0.8rem;
    position: relative;
    perspective: 1500px;
    transition: gap var(--panel-transition-duration) var(--panel-transition-timing),
    align-items var(--panel-transition-duration) var(--panel-transition-timing);
    width: 100%;
    max-width: 1700px;
    flex-grow: 1;
}

        /* ADD generic class for when *any* panel is active */
        body.panel-active .study-area {
        gap: 1.5rem;
        align-items: stretch; /* Stretch vertically */
        }

        /* When AI panel is active */
        .study-area.ai-panel-active {
            gap: 1.5rem; /* Reduce gap */
            align-items: stretch; /* Make items stretch vertically */
        }

/* --- AI and Edit Panel Base Styling --- */
.ai-panel,
.edit-panel {
    /* --- Keep the display: none fix --- */
    display: none; /* <<< Keep: Removes from layout when inactive */
    opacity: 0;
    /* width: 0; height: 0; visibility: hidden; - removed as display:none handles it */

    /* --- Other existing styles --- */
    max-height: var(--content-max-height);
    background-color: var(--primary-bg);
    border: 1px solid var(--border-color);
    border-radius: 1rem;
    transform: scale(0.95) translateX(40px);
    transform-origin: center right;
    z-index: 50;
    box-shadow: 0 6px 20px var(--shadow-color);
    flex-direction: column; /* Keep */
    overflow: hidden; /* Keep */
    order: 3; /* Keep */

    /* Adjust transition - cannot transition display, width, height */
    transition: transform var(--panel-transition-duration) var(--panel-transition-timing),
                opacity calc(var(--panel-transition-duration) * 0.8) ease calc(var(--panel-transition-duration) * 0.1),
                max-height var(--panel-transition-duration) var(--panel-transition-timing);
    will-change: transform, opacity, max-height;
}

/* State when panels are active (Show specific panel) */
body.ai-panel-active .ai-panel,
body.edit-panel-active .edit-panel {
    display: flex; /* <<< Keep: Makes visible and acts as flex container */
    width: var(--ai-panel-width);
    height: var(--content-target-height-ai);
    max-height: var(--content-target-height-ai); /* Optional but good practice */
    min-height: 0; /* Allow shrinking */
    opacity: 1;
    transform: scale(1) translateX(0);
    transition-delay: 0s;
    /* Transitions may need further tweaking if entry feels abrupt */
    transition: transform var(--panel-transition-duration) var(--panel-transition-timing),
    opacity calc(var(--panel-transition-duration) * 0.8) ease calc(var(--panel-transition-duration) * 0.1),
    max-height var(--panel-transition-duration) var(--panel-transition-timing),
    height var(--panel-transition-duration) var(--panel-transition-timing), /* Add height */
    width var(--panel-transition-duration) var(--panel-transition-timing); /* Add width */
}

        /* Specific AI Panel Glow (Apply only to AI panel) */
        body.ai-panel-active .ai-panel {
        box-shadow: 0 0 15px var(--ai-glow-color-1), 0 0 25px var(--ai-glow-color-2), 0 6px 20px var(--shadow-color);
        }

        .study-area.ai-panel-active .ai-panel {
            width: var(--ai-panel-width);
            opacity: 1;
            visibility: visible;
            transform: scale(1) translateX(0);
            order: 3; /* <<<<<<<<<< CHANGE ORDER TO 3 WHEN ACTIVE */
            max-height: var(--content-target-height-ai); /* <<<<<<<<<< SET TARGET HEIGHT */
            transition-delay: 0s;
        }

        /* --- Edit Panel Content Styling --- */
        .edit-panel-header { /* Style like AI header */
        display: flex; justify-content: space-between; align-items: center;
        padding: 0.8rem 1.2rem; border-bottom: 1px solid var(--border-color);
        flex-shrink: 0;
        }
        .edit-panel-header h3 { font-size: 1.1rem; margin: 0; color: var(--text-primary); }
        .edit-panel-header .close-edit { /* Style like close-ai */
        background: none; border: none; color: var(--icon-color);
        width: 2rem; height: 2rem; padding: 0; cursor: pointer;
        border-radius: 50%; display: inline-flex; align-items: center; justify-content: center;
        transition: background-color 0.2s ease, color 0.2s ease;
        }
        .edit-panel-header .close-edit:hover { background-color: var(--secondary-bg); color: var(--icon-hover-color); }
        .edit-panel-header .close-edit svg { width: 1.2rem; height: 1.2rem; }

        .edit-panel-content { /* Style like AI content */
        flex-grow: 1; padding: 1.2rem; overflow-y: auto; display: flex; flex-direction: column; gap: 1rem;
        /* Scrollbar */
        scrollbar-width: thin; scrollbar-color: var(--border-color) var(--primary-bg);
        }
        .edit-panel-content::-webkit-scrollbar { width: 8px; }
        .edit-panel-content::-webkit-scrollbar-track { background: var(--primary-bg); }
        .edit-panel-content::-webkit-scrollbar-thumb { background-color: var(--border-color); border-radius: 4px; }

        .edit-form-group { margin-bottom: 1rem; }
        .edit-form-group label { display: block; margin-bottom: 0.4rem; font-size: 0.85rem; color: var(--text-secondary); font-weight: 500; }
        .edit-form-group input[type="text"],
        .edit-form-group textarea {
        width: 100%; padding: 0.6rem 0.8rem; border: 1px solid var(--border-color);
        border-radius: 6px; background-color: var(--secondary-bg); color: var(--text-primary);
        font-size: 0.95rem; box-sizing: border-box;
        transition: border-color 0.2s ease, background-color 0.2s ease;
        }
        .edit-form-group input[type="text"]:focus,
        .edit-form-group textarea:focus { border-color: var(--accent-blue); background-color: var(--tertiary-bg); outline: none; }
        .edit-form-group textarea { min-height: 6rem; resize: vertical; line-height: 1.5; }

        .edit-panel-footer { /* Style like AI footer */
        padding: 0.8rem 1.2rem; border-top: 1px solid var(--border-color);
        display: flex; justify-content: flex-end; gap: 0.8rem; flex-shrink: 0;
        background-color: var(--secondary-bg);
        }
        /* Reuse panel-button styles if defined globally, or define here */
        .panel-button { padding: 0.5rem 1.2rem; border-radius: 5px; border: none; cursor: pointer; font-size: 0.9rem; font-weight: 500; transition: background-color 0.2s ease, transform 0.1s ease; }
        .panel-button.primary { background-color: var(--accent-green); color: white; }
        .panel-button.primary:hover { background-color: color-mix(in srgb, var(--accent-green) 90%, white); transform: translateY(-1px); }
        .panel-button.secondary { background-color: var(--border-color); color: var(--text-secondary); }
        .panel-button.secondary:hover { background-color: var(--hover-border-color); color: var(--text-primary); transform: translateY(-1px);}
        /* --- End Edit Panel Styles --- */

        .ai-panel-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.8rem 1.2rem;
            border-bottom: 1px solid var(--border-color);
            flex-shrink: 0;
        }
        .ai-panel-header h3 {
            font-size: 1.1rem;
            margin: 0;
            color: var(--text-primary);
        }
        .ai-panel-header .close-ai { /* Style close button like other icon buttons */
            background: none; border: none; color: var(--icon-color);
            width: 2rem; height: 2rem; padding: 0; cursor: pointer;
            border-radius: 50%; display: inline-flex; align-items: center; justify-content: center;
            transition: background-color 0.2s ease, color 0.2s ease;
        }
        .ai-panel-header .close-ai:hover { background-color: var(--secondary-bg); color: var(--icon-hover-color); }
        .ai-panel-header .close-ai svg { width: 1.2rem; height: 1.2rem; }

        .ai-panel-content {
            flex-grow: 1;
            padding: 1.2rem;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        .ai-panel-content p { margin: 0 0 0.5rem 0; color: var(--text-secondary); font-size: 0.9rem; }
        .ai-chat-placeholder { flex-grow: 1; background-color: var(--secondary-bg); border-radius: 8px; display: flex; align-items: center; justify-content: center; color: var(--text-secondary); font-style: italic; }
        .ai-panel-content textarea { width: 100%; height: 5rem; background-color: var(--secondary-bg); border: 1px solid var(--border-color); border-radius: 6px; color: var(--text-primary); padding: 0.5rem; font-family: inherit; font-size: 0.9rem; resize: none; }
        .ai-send-btn { background-color: var(--accent-blue); color: var(--primary-bg); border: none; padding: 0.6rem 1rem; border-radius: 6px; font-weight: 500; cursor: pointer; transition: background-color 0.2s ease; align-self: flex-end; }
        .ai-send-btn:hover { background-color: #31b0d5; }

                /* Shrink buttons in BOTH columns when panel is active */
        .study-area.ai-panel-active .card-actions-column .icon-btn {
            width: 2.5rem; /* Reduced size */
            height: 2.5rem;
            transform: scale(0.9);
        }
        .study-area.ai-panel-active .card-actions-column .icon-btn svg {
            width: 1.2rem;
            height: 1.2rem;
        }


        /* --- Card Actions (Flanking - Elements 3-8) --- */
        .card-actions-column {
            transition: transform 0.5s ease, opacity 0.4s ease 0.1s, width 0.5s ease, gap 0.5s ease;
            flex-shrink: 0;
            /* Removed align-self: center */
            display: flex; /* Ensure flex properties apply */
            flex-direction: column;
            align-items: center; /* Center buttons horizontally */
            justify-content: center; /* Center buttons vertically */
            gap: 1.5rem; /* Default gap */
            width: 4rem; /* Default width */
             padding-top: 0;
        }

        .card-actions-left {
            order: 1; /* Left column first */
        }
        .card-actions-right {
            order: 3; /* Right column after card */
        }

        .card-actions-column .icon-btn {
            background: linear-gradient(145deg, var(--secondary-bg), var(--action-btn-bg)); /* Subtle gradient */
            color: var(--icon-color);
            border: 1px solid var(--border-color);
            width: 3.2rem; /* Increased size, use rem */
            height: 3.2rem;
            border-radius: 50%;
            cursor: pointer;
            display: inline-flex; align-items: center; justify-content: center;
            transition: all 0.25s ease, box-shadow 0.3s ease, width 0.5s ease, height 0.5s ease, transform 0.5s ease; /* Add size transition */
            padding: 0;
            box-shadow: 0 4px 10px var(--shadow-color);
            position: relative; /* Needed for potential pseudo-elements */
        }
         .card-actions-column .icon-btn svg {
             width: 1.5rem; /* Use rem */
             height: 1.5rem;
             fill: currentColor;
        }
        .card-actions-column .icon-btn:hover:not(:disabled) {
            /* Base hover effect */
            color: var(--icon-hover-color);
            background: linear-gradient(145deg, var(--action-btn-hover-bg), var(--secondary-bg));
            border-color: var(--hover-border-color);
            transform: translateY(-3px) scale(1.05);
            /* Base shadow lift */
            box-shadow: 0 6px 15px var(--shadow-color);
        }

        /* Edit Button Active */
        #editBtn.active {
        background: linear-gradient(145deg, var(--accent-blue), #31b0d5); /* Blue gradient */
        border-color: var(--accent-blue);
        color: white;
        transform: scale(var(--action-btn-active-scale)); /* Use variable */
        box-shadow: 0 0 12px var(--edit-glow-color), 0 0 20px var(--edit-glow-color), 0 6px 15px var(--shadow-color);
        }
        /* AI Button Active */
        #aiBtn.active {
        transform: scale(var(--action-btn-active-scale)); /* Use variable */
        box-shadow: 0 0 14px var(--ai-glow-color-1), 0 0 25px var(--ai-glow-color-2), 0 6px 15px var(--shadow-color); /* Slightly stronger active glow */
        }

        /* Both columns stay on left when active */
        /* When AI panel is active */
        .study-area.ai-panel-active .card-actions-left {
            order: 1; /* Stays first */
            width: 3rem; /* Shrink width */
            gap: 0.8rem; /* Reduce gap */
            align-self: stretch; /* Stretch vertically with card/panel */
            justify-content: center; /* Keep buttons centered vertically */
        }

        .study-area.ai-panel-active .card-actions-right {
            order: 1; /* Moves to the left group visually (but will be hidden) */
            opacity: 0; /* Hide right column */
            width: 0; /* Collapse width */
            pointer-events: none; /* Disable interaction */
            /* Reset transform if any was applied */
            transform: translateX(-50px); /* Optional: Slight move left before fading */
            margin-left: -1.5rem; /* Compensate for gap removal */
            gap: 0; /* Collapse gap */
        }

        /* When AI panel is active (Class on BODY) */
        /* Move buttons */
        body.panel-active .card-actions-left { order: 1; width: 3rem; gap: 0.8rem; align-self: stretch; justify-content: center; }
        body.panel-active .card-actions-right { order: 1; opacity: 0; width: 0; pointer-events: none; margin-left: -1.5rem; gap: 0; transition-delay: 0s, 0s, 0s, 0s, 0.3s; }
        /* Shrink buttons */
        body.panel-active .card-actions-left .icon-btn {
        width: 2.5rem; height: 2.5rem; transform: scale(0.9);
        transition: width var(--panel-transition-duration) var(--panel-transition-timing),
        height var(--panel-transition-duration) var(--panel-transition-timing),
        transform var(--panel-transition-duration) var(--panel-transition-timing);
        }
        body.panel-active .card-actions-left .icon-btn svg { width: 1.2rem; height: 1.2rem; }

                        /* Shrink buttons in the LEFT column when panel is active */
        /* Shrink buttons in the LEFT column when panel is active */
        .study-area.ai-panel-active .card-actions-left .icon-btn {
            width: 2.5rem;
            height: 2.5rem;
            transform: scale(0.9);
        }
        .study-area.ai-panel-active .card-actions-left .icon-btn svg {
            width: 1.2rem;
            height: 1.2rem;
        }
        /* Make the gap smaller in the left column */
        .study-area.ai-panel-active .card-actions-left {
            gap: 1rem;
        }

        /* --- Specific Button Styles & Hover Glows --- */

        /* AI Button (Permanent Glow + Gradient) */
        #aiBtn {
            background: linear-gradient(145deg, var(--ai-glow-start), var(--ai-glow-end));
            color: #fff; /* Ensure contrast */
            border-color: var(--ai-glow-color-2);
            /* Persistent subtle glow */
            box-shadow: 0 0 8px var(--ai-glow-color-1), 0 0 15px var(--ai-glow-color-2), 0 4px 10px var(--shadow-color);
        }
        #aiBtn:hover:not(:disabled) {
            border-color: var(--ai-glow-end);
            /* Enhanced glow on hover */
            box-shadow: 0 0 14px var(--ai-glow-color-1), 0 0 25px var(--ai-glow-color-2), 0 6px 15px var(--shadow-color);
            color: #fff;
            /* Keep transform */
            transform: translateY(-3px) scale(1.05);
        }

        /* Star Button Hover */
        #starBtn:hover:not(:disabled) {
            border-color: var(--accent-yellow);
            box-shadow: 0 0 12px var(--star-glow-color), 0 6px 15px var(--shadow-color); /* Yellow Glow + Base Shadow */
        }
        #starBtn.active { /* Keep active style distinct */
            color: var(--accent-yellow);
            background: linear-gradient(145deg, var(--action-btn-hover-bg), var(--secondary-bg));
            border-color: var(--accent-yellow);
            box-shadow: 0 0 10px var(--star-glow-color), 0 4px 10px var(--shadow-color);
        }
        #starBtn.active:hover:not(:disabled) { /* Hover on active star */
            box-shadow: 0 0 15px var(--star-glow-color), 0 6px 15px var(--shadow-color);
        }


        /* Delete Button Hover */
        #deleteBtn:hover:not(:disabled) {
            border-color: var(--accent-red);
            box-shadow: 0 0 12px var(--delete-glow-color), 0 6px 15px var(--shadow-color); /* Red Glow + Base Shadow */
        }

        /* Edit Button Hover */
        #editBtn:hover:not(:disabled) {
            border-color: var(--accent-blue);
            box-shadow: 0 0 12px var(--edit-glow-color), 0 6px 15px var(--shadow-color); /* Blue Glow + Base Shadow */
        }

        /* Skip Button Hover */
        #skipBtn:hover:not(:disabled) {
            border-color: var(--text-secondary); /* Example */
            box-shadow: 0 0 12px var(--skip-glow-color), 0 6px 15px var(--shadow-color); /* Grey Glow + Base Shadow */
        }

        /* Bury Button Hover */
        #buryBtn:hover:not(:disabled) {
            border-color: var(--accent-green);
            box-shadow: 0 0 12px var(--bury-glow-color), 0 6px 15px var(--shadow-color); /* Green Glow + Base Shadow */
        }


        /* AI Button Glow */
        .card-actions-column .icon-btn.ai:hover:not(:disabled) {
            border-color: var(--ai-glow-color-2);
             box-shadow: 0 0 12px var(--ai-glow-color-1), 0 0 20px var(--ai-glow-color-2), 0 6px 15px var(--shadow-color);
             color: #fff;
         }
        /* Active Star State */
        .card-actions-column .icon-btn.star.active {
            color: var(--accent-yellow);
            background: linear-gradient(145deg, var(--action-btn-hover-bg), var(--secondary-bg));
            border-color: var(--accent-yellow);
            box-shadow: 0 0 10px var(--accent-yellow), 0 4px 10px var(--shadow-color);
         }
        .card-actions-column .icon-btn.star .icon-star-filled { display: none; }
        .card-actions-column .icon-btn.star.active .icon-star-filled { display: block; } /* Corrected display */
        .card-actions-column .icon-btn.star.active .icon-star-outline { display: none; }

        


/* --- Card Scene & Flipper --- */
.card-scene {
    /* === REVERT TO PREVIOUS SIZING === */
    flex-grow: 1;                     /* <<< Allow growing */
    flex-shrink: 1;                   /* <<< Allow shrinking (good practice) */
    flex-basis: auto;                 /* <<< Let grow/content determine base */
                   /* <<< Restore original max-width */
    /* === REMOVE MARGIN AUTO === */
    /* margin-left: auto;  */        /* <<< REMOVE */
    /* margin-right: auto; */        /* <<< REMOVE */

    /* --- Keep other styles --- */
    min-height: 25rem;
    height: auto;
    max-height: var(--content-max-height); /* Restore this */
    transition: width 0.5s ease, max-width 0.5s ease,
                height 0.5s ease,
                min-height 0.5s ease,
                max-height 0.5s ease;
    order: 2;
    
    width: 95%; /* Increase width (adjust value as needed) */
    height: 575px; /* Increase height (adjust value as needed) */
    margin: 0rem auto; /* Adjust margin if needed for centering */
    position: relative;
}

                /* Re-enable base hover effect (shadow lift) */
        .card-scene:hover {
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
            z-index: 10;
        }

        /* --- Card Scene & Action Button Adjustments When Panel Active --- */
        body.panel-active .card-scene {
            /* Apply width reduction using flex-basis or width */
            flex-basis: calc(100% - var(--ai-panel-width) - 4rem); /* Adjust basis, account for gap */
            flex-grow: 0; /* Prevent growing */
            flex-shrink: 1; /* Allow shrinking */
            max-width: none; /* Override max-width */
            height: var(--content-target-height-ai);
            max-height: var(--content-target-height-ai);
            min-height: 0;
            transition: flex-basis var(--panel-transition-duration) var(--panel-transition-timing), /* Animate flex-basis */
                        width var(--panel-transition-duration) var(--panel-transition-timing),
                        height var(--panel-transition-duration) var(--panel-transition-timing),
                        max-height var(--panel-transition-duration) var(--panel-transition-timing),
                        min-height var(--panel-transition-duration) var(--panel-transition-timing);
        }

        body.panel-active .card-face {
            width : 100%;
            margin-top : 0;
        }

        .study-area.ai-panel-active .card-scene {
            /* Width is now determined by flex-grow */
            /* Target height set by align-items: stretch, constrained by max-height */
            max-height: var(--content-target-height-ai); /* <<<<<<<<<< SET TARGET HEIGHT */
            min-height: 0; /* Allow shrinking if needed, though max-height dominates */
        }
        /* Ensure scrolling within new height limit */
        .study-area.ai-panel-active .card-content-wrapper {
            /* Ensure it doesn't overflow the card face */
            height: 100%; /* Try to fill available space */
        }

        /* --- SIMPLE TILT EFFECT (Pure CSS) --- */
         /* JS would update --flipper-transform based on mouse position */
         /* For flip animation: */
         .card-scene.is-flipped .card-flipper {
            /* Override tilt when flipped - Apply flip rotation instantly or with transition */
             transition: transform 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94); /* Apply flip transition */
            transform: rotateY(180deg); /* No tilt when flipped */
        }
        /* --- End Tilt Effect --- */


        .card-flipper {
            width: 100%;
            height: 100%;
            transition: transform 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            transform-style: preserve-3d;
            position: relative;
            min-height: inherit;
            transform: var(--flipper-transform, rotateY(0deg)); 
            transform: rotateX(var(--tilt-x, 0deg)) rotateY(var(--tilt-y, 0deg));
        }

        .card-face {
            position: absolute;
            width: 1000px;
            min-height: inherit; /* Inherit min-height from scene */
            height: 100%; /* Allow to grow based on content */
            -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
            
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 1rem; /* Use rem */
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
            display: flex;
            top: 0; left: 0;
            flex-direction: column;
            /* overflow: hidden;   Important for border-radius */
        }

        .card-front {
            z-index: 2;
            align-items: center;
            justify-content: center; /* Center main content */
             padding: 3rem; /* Use rem */
             text-align: center;
             position: relative; /* Needed for absolute positioning flip button */
        }

        .card-back {
            transform: rotateY(180deg);
             padding: 0;
             justify-content: space-between;
             z-index: 1; /* Back is initially lower */

        }

        /* --- Flip Prompt Button --- */
        .flip-prompt-btn {
            position: absolute;
            bottom: 1.5rem; /* Position at bottom */
            left: 50%;
            transform: translateX(-50%);
            background-color: var(--flip-btn-bg);
            color: var(--flip-btn-text);
            border: none;
            padding: 0.6rem 1.5rem;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 500;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.25s ease;
            box-shadow: 0 0 12px var(--flip-btn-glow), 0 0 20px var(--flip-btn-glow), 0 3px 8px rgba(0,0,0,0.3);
            z-index: 3; /* Above card front content */
        }
        .flip-prompt-btn svg {
             width: 1.2rem;
             height: 1.2rem;
             fill: currentColor;
        }
        .flip-prompt-btn .text { /* Span for text to hide/show tooltip */
             transition: opacity 0.2s ease;
        }
        .flip-prompt-btn::after { /* Tooltip */
             content: attr(data-tooltip);
             position: absolute;
             bottom: 100%; /* Position above button */
             left: 50%;
             transform: translateX(-50%) translateY(-5px); /* Center and space */
             background-color: var(--primary-bg);
             color: var(--text-primary);
             padding: 0.4rem 0.8rem;
             border-radius: 5px;
             font-size: 0.8rem;
             white-space: nowrap;
             opacity: 0;
             visibility: hidden;
             transition: opacity 0.2s ease, visibility 0s linear 0.2s;
             z-index: 10;
             box-shadow: 0 2px 5px rgba(0,0,0,0.3);
        }
        .flip-prompt-btn:hover {
             transform: translateX(-50%) scale(1.05); /* Grow slightly */
             box-shadow: 0 0 18px var(--flip-btn-glow), 0 0 30px var(--flip-btn-glow), 0 5px 12px rgba(0,0,0,0.4);
        }
        .flip-prompt-btn:hover::after {
             opacity: 1;
             visibility: visible;
             transition-delay: 0s; /* Show immediately */
        }
        .flip-prompt-btn:hover .text {
              opacity: 0; /* Hide original text on hover */
        }


         /* --- Card Content Styling (Front & Back) --- */
        .theorem-name {
            font-size: 2rem; /* Use rem */
            font-weight: 600;
            margin-bottom: 1rem;
            color: var(--text-primary);
        }

        .card-meta {
            font-size: 1rem; /* Use rem */
            color: var(--text-secondary);
            margin-bottom: 3rem; /* Add space above flip button */
        }

         .card-content-wrapper {
            height: 100%; /* Try to fill card-face height */
             flex-grow: 1;
             overflow-y: auto;
             padding-left: 1rem;  /* <<< REDUCED */
             padding-right: 1rem; /* <<< REDUCED */
             /* Add vertical padding to keep scrollbar away from top/bottom rounded corners */
             padding-top: 1.5rem;
             padding-bottom: 1.5rem;
            scroll-behavior: smooth;
         }
         /* Custom scrollbar styling (keep as is) */
 /* Custom scrollbar styling */
 .card-content-wrapper::-webkit-scrollbar { width: 8px; }
 .card-content-wrapper::-webkit-scrollbar-track {
    background: transparent; /* Make track transparent */
    border-radius: 4px;
    /* Add margin to push track away from edge */
    margin: 15px 0;
 }
 .card-content-wrapper::-webkit-scrollbar-thumb {
    background-color: var(--border-color);
    border-radius: 4px;
    /* Border creates space around thumb, making it look inset */
    border: 1px solid var(--card-bg); /* Use card background for border */
 }
 .card-content-wrapper::-webkit-scrollbar-thumb:hover { background-color: var(--hover-border-color); }

.explanation {
            font-size: 1em;
            line-height: 1.3;
            /* margin-bottom: 1em; /* Now handled by explanation-block */
        }
        
        /* --- LaTeX Block Styling (Keep As Is) --- */
        .explanation .latex-block {
            margin: 0px 0;
            padding: 10px;
            background-color: #1f2a40; /* Slightly different background */
            border-radius: 10px; /* Can keep this or match main block radius */
            overflow-x: auto; /* Allow horizontal scroll for wide equations */
            color: #e0e0e0; /* Ensure text is visible */
        }
        
        /* --- Base Explanation Block --- */
        /* --- NEW Explanation Block Styling --- */
        .explanation .explanation-block {
        border: var(--block-border-width) solid var(--block-border-color); /* Default border */
        border-radius: var(--block-border-radius);
        background-color: var(--block-bg-color-base);
        overflow-y: hidden; /* Clip content */
        position: relative;
        margin-top:15px;
        transition: border-color var(--block-transition-duration) ease,
                box-shadow var(--block-transition-duration) ease;
                margin-bottom: 1.2em; /* Slightly increased space between blocks */
        }

        /* --- Style for Short Titles (Instead of Blocks) --- */
.short-block-title {
    display: block; /* Ensures it takes its own line and margins */
    font-weight: 600; /* Bold */
    font-size: 1.4em; /* Slightly larger than normal text */
    color: var(--text-primary);
    margin-top: 0.8em;    /* Space above */
    margin-bottom: 0.6em; /* Space below */
    padding-left: 0.4em 0.6em;
}

/* --- Style for regular text segments --- */
.explanation-text-segment {
    padding: 0 0.1em; /* Align with block content */
    margin-bottom: 0.9em; /* Space below text segments */
    line-height: 1.6;
}
.explanation-text-segment:first-child {
    padding-top: var(--block-content-padding-top-bottom, 0.8rem); /* Add top padding if it's the first element */
}
 .explanation-text-segment:last-child {
    padding-bottom: var(--block-content-padding-top-bottom, 0.8rem); /* Add bottom padding if it's the last element */
}


        /* Type-Specific Border Colors */
.explanation .explanation-block.type-definition { border-color: var(--accent-definition); }
.explanation .explanation-block.type-theoreme { border-color: var(--accent-theoreme); }
.explanation .explanation-block.type-proposition { border-color: var(--accent-proposition); }
.explanation .explanation-block.type-lemme { border-color: var(--accent-lemme); }
.explanation .explanation-block.type-corollaire { border-color: var(--accent-corollaire); }
.explanation .explanation-block.type-exemple { border-color: var(--accent-exemple); }
.explanation .explanation-block.type-explication { border-color: var(--accent-explication); }
.explanation .explanation-block.type-remarque { border-color: var(--accent-remarque); }
.explanation .explanation-block.type-preuve { border-color: var(--accent-preuve); }
.explanation .explanation-block.type-text { border-color: var(--accent-text); } /* Ensure text has border */
.explanation .explanation-block.type-latex-block { border-color: var(--accent-latex-block); }
.explanation .explanation-block.type-error { border-color: var(--accent-error); }

        .explanation .explanation-block[data-block-type*="Définition"],
        .explanation .explanation-block[data-block-type*="Definition"] {
            border-color: var(--accent-blue);
        }
        
        /* --- Theorem --- */
        .explanation .explanation-block[data-block-type*="Théorème"],
        .explanation .explanation-block[data-block-type*="Theorem"] {
            border-color: var(--accent-yellow);
        }


        /* Keyboard Selection Highlight - More Prominent */
        .explanation-block.keyboard-selected {
        /* Use a thicker border */
        border-width: var(--block-selected-border-width);
        border-color: var(--block-selected-outline-color); /* Use the focus color */
        /* Stronger shadow/glow */
        box-shadow: 0 0 10px 2px var(--block-selected-outline-color);
        /* Remove default outline if browser adds one */
        outline: none;
        }

        /* Remove any potential default :first-child styling that might confuse selection */
        .explanation .explanation-block:first-child {
        /* Remove any specific first-child border/outline styles here if they exist */
        /* border-left: var(--block-border-width) solid var(--block-border-color); */ /* Reset if needed */
        }

        /* Type-Specific Selection Highlights (Overrides base border/shadow color) */
/* Excludes .type-text */
.explanation-block.type-definition.keyboard-selected {
    border-color: var(--accent-definition);
    box-shadow: 0 0 10px 2px var(--accent-definition);
}
.explanation-block.type-theoreme.keyboard-selected {
    border-color: var(--accent-theoreme);
    box-shadow: 0 0 10px 2px var(--accent-theoreme);
}
.explanation-block.type-proposition.keyboard-selected {
    border-color: var(--accent-proposition);
    box-shadow: 0 0 10px 2px var(--accent-proposition);
}
.explanation-block.type-lemme.keyboard-selected {
    border-color: var(--accent-lemme);
    box-shadow: 0 0 10px 2px var(--accent-lemme);
}
.explanation-block.type-corollaire.keyboard-selected {
    border-color: var(--accent-corollaire);
    box-shadow: 0 0 10px 2px var(--accent-corollaire);
}
.explanation-block.type-exemple.keyboard-selected {
    border-color: var(--accent-exemple);
    box-shadow: 0 0 10px 2px var(--accent-exemple);
}
.explanation-block.type-explication.keyboard-selected {
    border-color: var(--accent-explication);
    box-shadow: 0 0 10px 2px var(--accent-explication);
}
.explanation-block.type-remarque.keyboard-selected {
    border-color: var(--accent-remarque);
    box-shadow: 0 0 10px 2px var(--accent-remarque);
}
.explanation-block.type-preuve.keyboard-selected {
    border-color: var(--accent-preuve);
    box-shadow: 0 0 10px 2px var(--accent-preuve);
}
.explanation-block.type-latex-block.keyboard-selected {
    border-color: var(--accent-latex-block);
    box-shadow: 0 0 10px 2px var(--accent-latex-block);
}
.explanation-block.type-error.keyboard-selected {
    border-color: var(--accent-error);
    box-shadow: 0 0 10px 2px var(--accent-error);
}

.explanation .explanation-block[data-block-type*="Définition"].keyboard-selected,
.explanation .explanation-block[data-block-type*="Definition"].keyboard-selected {
    box-shadow: 0 0 10px 2px var(--accent-blue);
}

/* --- Theorem --- */
.explanation .explanation-block[data-block-type*="Théorème"].keyboard-selected,
.explanation .explanation-block[data-block-type*="Theorem"].keyboard-selected {
    box-shadow: 0 0 10px 2px var(--accent-yellow);
}

.explanation-block.is-expanded:not(.keyboard-selected) .explanation-block-header {
    /* Use the block's default border color when expanded but not selected */
    border-bottom-color: var(--block-border-color);
}

        /* Ensure expanded header border uses the selected color if selected */
        .explanation-block.is-expanded.keyboard-selected .explanation-block-header {
        border-bottom-color: var(--block-selected-outline-color);
        }
        /* And reset header border for non-selected expanded items */
        .explanation-block.is-expanded:not(.keyboard-selected) .explanation-block-header {
        border-bottom-color: var(--block-border-color);
        }


        /* --- Explanation Block Header --- */
        .explanation-block-header {
        display: flex;
        align-items: center;
        gap: 0.6rem; /* Space between icon, title, controls */
        padding: var(--block-header-padding);
        cursor: pointer;
        background-color: rgba(0, 0, 0, 0.1); /* Subtle header background */
        border-bottom: var(--block-border-width) solid transparent; /* Separator for expanded */
        transition: background-color 0.2s ease, border-color 0.2s ease;
        position: relative; /* For focus outline */
        outline: none; /* Remove default */
        z-index : 2;
        }

        .explanation-block.is-expanded .explanation-block-header {
            border-bottom-color: var(--block-border-color); /* Show separator when expanded */
       }

/* Header Title */
.explanation-block-title {
    flex-grow: 1; /* Take available space */
    font-weight: 600;
    color: var(--text-primary); /* Title text always primary */
    margin-right: 0.5rem; /* Space before controls */
}

/* Type Icon */
/* Type Icon */
/* Type Icon */
/* --- Type Icon (Simplified for Inline SVG) --- */
.type-icon {
    width: 1.2em;
    height: 1.2em;
    flex-shrink: 0;
    opacity: 0.8;
    display: inline-block; /* Or block, depending on layout needs */
    vertical-align: middle; /* Align with text */
    /* Color is inherited from header via 'currentColor' in SVG */
}
.type-icon-text {display : none; }
.type-icon-latex-block {display : none; }
.type-icon-other {display : none; }
.type-icon-latex-block {display : none; }
/* Header Hover Effect */
.explanation-block-header:hover {
    background-color: rgba(255, 255, 255, 0.08); /* Slightly lighter on hover */
}
/* Keep type-specific header colors */
.explanation .explanation-block[data-block-type*="Définition"] .explanation-block-header:hover,
.explanation .explanation-block[data-block-type*="Definition"] .explanation-block-header:hover {
    background-color: color-mix(in srgb, var(--accent-blue) 90%, #000);
}
.explanation .explanation-block[data-block-type*="Explication"] .explanation-block-header:hover {
    background-color: color-mix(in srgb, var(--accent-purple) 90%, #000);
}
.explanation .explanation-block[data-block-type*="Proposition"] .explanation-block-header:hover {
    background-color: color-mix(in srgb, var(--accent-green) 90%, #000);
}
/* Add similar hover mixins for other block types (Theorem, Corollary, Lemma, Example) */
.explanation .explanation-block[data-block-type*="Théorème"] .explanation-block-header:hover,
.explanation .explanation-block[data-block-type*="Theorem"] .explanation-block-header:hover {
    background-color: color-mix(in srgb, var(--accent-yellow) 90%, #000);
}
.explanation .explanation-block[data-block-type*="Corollaire"] .explanation-block-header:hover,
.explanation .explanation-block[data-block-type*="Corollary"] .explanation-block-header:hover {
    background-color: color-mix(in srgb, #4db6ac 90%, #000);
}
.explanation .explanation-block[data-block-type*="Lemme"] .explanation-block-header:hover,
.explanation .explanation-block[data-block-type*="Lemma"] .explanation-block-header:hover {
    background-color: color-mix(in srgb, var(--accent-red) 90%, #000);
}
.explanation .explanation-block[data-block-type*="Exemple"] .explanation-block-header:hover,
.explanation .explanation-block[data-block-type*="Example"] .explanation-block-header:hover {
    background-color: color-mix(in srgb, #ffb74d 90%, #000);
}

/* --- NEW: Content Container (Handles expand/collapse) --- */
.content-container {
    max-height: var(--block-peek-height); /* Collapse using container */
    overflow: hidden;
    position: relative; /* Crucial for positioning hint preview */
    transition: max-height var(--block-transition-duration) var(--block-transition-timing);
    /* Remove direct padding/margin from here */
}
/* Expanded State for Container */
.explanation-block.is-expanded .content-container,
.explanation-block.is-hinted .content-container { /* Also expand container in hint state */
    max-height: 1000px; /* Expand container fully */
}


/* --- NEW: Blurred Content Div --- */
.explanation-block-content-blurred {
    padding: calc(0.25*var(--block-content-padding-left-right)) var(--block-content-padding-left-right); /* Apply only horizontal padding by default */
    line-height: 1.6;
    transition: filter var(--block-transition-duration) ease;
    transition: filter var(--block-transition-duration) ease,
    padding-top var(--block-transition-duration) ease, /* Add padding transition */
    padding-bottom var(--block-transition-duration) ease; /* Add padding transition */
    /* Default state: no blur */
    filter: none;
    /* Add background if needed, e.g., if main block bg is very transparent */
    /* background-color: var(--block-bg-color-base); */
}


/* Add blur ONLY in hint state */
.explanation-block.is-hinted .explanation-block-content-blurred {
    filter: blur(var(--block-blur-amount));
}

/* Restore vertical padding when expanded or hinted */
.explanation-block.is-expanded .explanation-block-content-blurred,
.explanation-block.is-hinted .explanation-block-content-blurred {
    padding-top: var(--block-content-padding-top-bottom);
    padding-bottom: var(--block-content-padding-top-bottom);
}

.explanation-block-content-blurred ul, /* Target lists inside the blurred div */
.explanation-block-content-blurred ol {
    margin-left: 1.8rem; /* <<< INCREASED MARGIN for lists (adjust value as needed) */
    /* Adjust padding-left if necessary, depending on list-style-position */
    padding-left: 0; /* Reset padding if margin handles indentation */
    margin-top: 0.5em; /* Add some space above lists */
    margin-bottom: 0.5em; /* Add some space below lists */
}

/* Target lists inside the blurred div AND the hint preview */
.explanation-block-content-blurred ul,
.explanation-block-content-blurred ol,
.explanation-block-hint-preview ul,
.explanation-block-hint-preview ol {
    margin-left: 1.8rem; /* <<< INCREASED MARGIN for lists (adjust value as needed) */
    /* Adjust padding-left if necessary, depending on list-style-position */
    padding-left: 0; /* Reset padding if margin handles indentation */
    margin-top: 0.5em; /* Add some space above lists */
    margin-bottom: 0.5em; /* Add some space below lists */
}


/* Optional: Fade out effect at the bottom when collapsed (peek) */
.content-container::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: var(--block-fade-height);
    background: linear-gradient(to bottom, transparent, var(--block-bg-color, var(--block-bg-color-base)));
    pointer-events: none;
    transition: opacity var(--block-transition-duration) ease;
    opacity: 1; /* Show when collapsed */
    z-index: 1; /* Below hint preview */
}
.explanation-block.is-expanded .content-container::after,
.explanation-block.is-hinted .content-container::after {
    opacity: 0; /* Hide fade when expanded or hinted */
}

/* --- Hint State --- */
.explanation-block.is-hinted .explanation-block-content {
    max-height: 1000px; /* Allow full height */
    filter: blur(var(--block-blur-amount)); /* Apply blur to the *entire* original content */
    padding-top: var(--block-content-padding); /* Apply padding so overlay aligns */
    padding-bottom: var(--block-content-padding);
    overflow-x:scroll;
}
.explanation-block.is-hinted .explanation-block-content::after {
    opacity: 0; /* Hide fade effect when hinted */
}

/* --- NEW: Hint Preview Div (Overlay) --- */
.explanation-block-hint-preview {
    display: none; /* Hidden by default */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    box-sizing: border-box;
    padding: var(--block-content-padding-top-bottom) var(--block-content-padding-left-right); /* Match padding */
    color: var(--text-primary);
    font-size: inherit;
    line-height: inherit;
    overflow: hidden; /* *** CRUCIAL: Hide content exceeding max-height *** */
    max-height: var(--hint-preview-max-height); /* *** LIMIT HEIGHT *** */
    pointer-events: none;
    z-index: 3;
    /* white-space: pre-wrap; Remove this, let content flow naturally */
    background-color: var(--block-bg-color-base); /* Or match card bg */
    /* No filter applied here */
}
/* Show hint preview ONLY in hint state */
.explanation-block.is-hinted .explanation-block-hint-preview {
    display: block;
}

/* Group for Hint/Toggle Controls */
.explanation .explanation-block .explanation-block-header .header-controls {
    display: flex;
    align-items: center;
    margin-left: auto; /* Push controls to the right */
}

/* Hint Button */
.hint-button {
    display: inline-flex;
    align-items: center;
    gap: 0.3em;
    padding: 0.3em 0.7em;
    font-size: 0.8em;
    line-height: 1;
    border-radius: 1em; /* Pill shape */
    border: 1px solid currentColor; /* Use header color */
    background-color: transparent;
    color: currentColor; /* Inherit header color */
    cursor: pointer;
    opacity: 0.7;
    transition: opacity 0.2s ease, background-color 0.2s ease;
}
.hint-button:hover {
    opacity: 1;
    background-color: rgba(255, 255, 255, 0.1);
}
.hint-icon {
    width: 1.5em;
    height: 1.5em;
}
/* Active Hint Button State */
.explanation-block.is-hinted .hint-button {
    background-color: rgba(255, 255, 255, 0.2);
    opacity: 1;
}


/* Toggle Icon Button */
.toggle-icon-button {
    background: none;
    border: 1px solid currentColor;
    border-radius: 50%;
    padding: 0.7em; /* Clickable area */
    margin: 0;
    margin-left : 10px;
    cursor: pointer;
    color: currentColor; /* Inherit header color */
    opacity: 0.7;
    transition: opacity 0.2s ease, transform var(--block-transition-duration) ease-out;
    display: inline-flex; /* Align icon */
    align-items: center;
    justify-content: center;
}
.toggle-icon-button:hover {
    opacity: 1;
}
.toggle-icon {
    width: 1em;
    height: 1em;
    display: block; /* Ensure icon takes space */
    transition: transform var(--block-transition-duration) ease-out; /* Move transition here */
    transform-origin: center;
}
.explanation-block.is-expanded .toggle-icon {
    transform: rotate(90deg); /* Rotate when expanded or hinted */
}
        
/* --- Explanation Block Content --- */
.explanation-block-content {
    max-height: var(--block-peek-height); /* Start collapsed (peek) */
    overflow: hidden;
    position: relative; /* For pseudo-element */
    padding: 0 var(--block-content-padding); /* No top/bottom padding when collapsed */
    margin: 0;
    line-height: 1.6;
    filter: blur(var(--block-blur-amount)); /* Blur the peek */
    transition: max-height var(--block-transition-duration) var(--block-transition-timing),
                filter var(--block-transition-duration) ease,
                padding-top var(--block-transition-duration) ease,
                padding-bottom var(--block-transition-duration) ease;
}

/* --- Increase margin for lists inside explanation blocks --- */
.explanation-block-content ul,
.explanation-block-content ol {
    margin-left: 2.2rem; /* <<< INCREASED MARGIN for lists */
    /* Adjust padding-left if necessary, depending on list-style-position */
    padding-left: 0; /* Reset padding if margin handles indentation */
}

/* Fade-out effect for collapsed content */
.explanation-block-content::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: var(--block-fade-height);
    /* Use block bg or fallback */
    background: linear-gradient(to bottom, transparent, var(--block-bg-color, var(--block-bg-color-base)));
    pointer-events: none;
    transition: opacity var(--block-transition-duration) ease;
    opacity: 1; /* Visible when collapsed */
}

/* Expanded State */
.explanation-block.is-expanded .explanation-block-content {
    max-height: 1000px; /* Large value for expansion */
    filter: none; /* Remove blur */
    padding-top: var(--block-content-padding);
    padding-bottom: var(--block-content-padding);
}
.explanation-block.is-expanded .explanation-block-content::after {
    opacity: 0; /* Hide fade */
}

/* Expanded State */
.explanation .explanation-block.is-expanded .explanation-block-content {
    max-height: 1000px; /* Adjust if content can be extremely long */
    /* Restore original padding and add margin */
    filter: none; /* Remove blur */
    padding-top: 0.8rem;
    padding-bottom: 1rem;
    /* Keep left/right padding from default state */
    /* margin-top: 0.5rem; /* Optional: Add space between header and content */
}
.explanation .explanation-block.is-expanded .explanation-block-content::after {
    opacity: 0; /* Hide fade */
}
.explanation .explanation-block.is-expanded .toggle-icon {
    transform: rotate(90deg); /* Rotate toggle icon */
}

        /* --- Text Block Specific Styling --- */
        /* Hide Icon for Text Blocks */
        .explanation-block.type-text .type-icon {
        display: none;
        }
        .explanation-block.type-text .explanation-block-header {
            /* gap: 0; Remove gap if icon is the only thing on the left */
            padding-left: 0.8rem; /* Maintain some left padding */
        }
        .explanation-block.type-text .explanation-block-title {
            margin-left: 0; /* No margin needed if no icon */
        }
        .explanation-block.type-text.is-expanded .explanation-block-header {
        border-bottom-color: var(--accent-text); /* Match border color */
        }

        /* Header Background Colors (Non-Text) */
        /* Apply a semi-transparent background matching the border color */
        .explanation-block:not(.type-text) .explanation-block-header {
        /* background-color: rgba(var(--accent-rgb), var(--block-header-bg-opacity)); */
        /* Need to set this per type */
        border-bottom-color: transparent; /* Ensure default border is transparent */
        transition: background-color 0.2s ease, border-color 0.2s ease;
        }
        .explanation-block:not(.type-text):hover .explanation-block-header {
        /* Slightly less transparent on hover */
        /* background-color: rgba(var(--accent-rgb), calc(var(--block-header-bg-opacity) + 0.1)); */
        }

        /* Define backgrounds per type using CSS variables */
        .explanation-block.type-definition .explanation-block-header { background-color: color-mix(in srgb, var(--accent-definition) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-definition); }
        .explanation-block.type-theoreme .explanation-block-header { background-color: color-mix(in srgb, var(--accent-theoreme) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-theoreme); }
        .explanation-block.type-proposition .explanation-block-header { background-color: color-mix(in srgb, var(--accent-proposition) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-proposition); }
        .explanation-block.type-lemme .explanation-block-header { background-color: color-mix(in srgb, var(--accent-lemme) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-lemme); }
        .explanation-block.type-corollaire .explanation-block-header { background-color: color-mix(in srgb, var(--accent-corollaire) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-corollaire); }
        .explanation-block.type-exemple .explanation-block-header { background-color: color-mix(in srgb, var(--accent-exemple) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-exemple); }
        .explanation-block.type-explication .explanation-block-header { background-color: color-mix(in srgb, var(--accent-explication) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-explication); }
        .explanation-block.type-remarque .explanation-block-header { background-color: color-mix(in srgb, var(--accent-remarque) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-remarque); }
        .explanation-block.type-preuve .explanation-block-header { background-color: color-mix(in srgb, var(--accent-preuve) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-preuve); }
        .explanation-block.type-latex-block .explanation-block-header { background-color: color-mix(in srgb, var(--accent-latex-block) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-latex-block); }
        .explanation-block.type-error .explanation-block-header { background-color: color-mix(in srgb, var(--accent-error) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-error); }
        .explanation .explanation-block[data-block-type*="Définition"] .explanation-block-header,
        .explanation .explanation-block[data-block-type*="Definition"] .explanation-block-header {
            background-color: color-mix(in srgb, var(--accent-blue) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-blue);
        }
        .explanation .explanation-block[data-block-type*="Théorème"] .explanation-block-header,
        .explanation .explanation-block[data-block-type*="Theorem"] .explanation-block-header {
            background-color: color-mix(in srgb, var(--accent-theoreme) calc(var(--block-header-bg-opacity) * 100%), transparent); color: var(--accent-theoreme);
        }

        /* Ensure title text remains readable on colored backgrounds */
        .explanation-block:not(.type-text) .explanation-block-title {
        color: var(--text-primary); /* Keep title text bright */
        }

        /* Header hover refinement */
        .explanation-block:not(.type-text) .explanation-block-header:hover {
        /* Slightly darken or lighten the background on hover */
        background-color: color-mix(in srgb, currentColor 35%, transparent); /* Use currentColor of header */
        }

        /* --- KaTeX specific adjustments inside blocks --- */
        .explanation-block-content .katex-display {
        margin: 0.8em 0; /* Adjust spacing within blocks */
        overflow-x: auto; /* Allow horizontal scroll for wide equations */
        padding: 0.2em 0;
        }
        
        /* Add others */
        .card-scene .brief-explanation { display: block; }
        .card-scene .detailed-explanation { display: none; }
        /* --- Separator styling (keep as is) --- */
        .card-scene.show-detailed .explanation-separator {
            display: block;
            border: none;
            border-top: 2px dotted var(--border-color);
            width: 50%;
            margin: 1.8rem auto;
            opacity: 0.6;
        }
        .card-scene.show-detailed .brief-explanation {
            display: block; /* KEEP brief visible */
            margin-top: 1.5rem; /* Add space above brief when detailed is shown */
        }
        .card-scene.show-detailed .detailed-explanation { display: block; }
        .card-scene.show-detailed .explanation-separator {
            display: block; /* Show separator */
            border: none;
            border-top: 2px dotted var(--border-color); /* Dotted style */
            width: 50%; /* 50% width */
            margin: 1.8rem auto; /* Vertical space and horizontal centering */
            opacity: 0.6; /* Make it less prominent */
        }

        /* --- Adjust detail toggle button position slightly --- */
        .detail-toggle-container {
        padding: 0.5rem 0 0.8rem 0; /* Slightly less padding */
        margin-top: 0.5rem;
        }
        
        .toggle-detail-btn { /* Style remains similar */
            background: none;
            border: 1px solid var(--border-color);
            color: var(--text-secondary);
            padding: 0.4rem 0.8rem;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.85rem;
            transition: all 0.2s ease;
        }
        .toggle-detail-btn:hover { /* Style remains similar */
            background-color: var(--tertiary-bg);
            color: var(--text-primary);
            border-color: var(--hover-border-color);
        }
        .keyboard-hint { font-size: 0.75rem; color: #8a9ac0; margin-left: 0.3rem; }

        /* --- Quality Buttons (Elements 9-12) --- */
/* --- Quality Buttons (Positioned relative to card-scene) --- */
/* --- Quality Buttons (Positioning Fix) --- */
.quality-buttons {
    display: flex;
    justify-content: space-around;
    position: absolute;
    left: 50%;
    width: 90%;
    max-width: calc(100% - 4rem);

    /* Positioning: Start further down */
    bottom: 0; /* Align bottom for transform origin */
    transform: translateX(-50%) translateY(80%); /* Start lower */

    z-index: 10;
    padding: 0;
    gap: 0.8rem;

    opacity: 0;
    visibility: hidden;
    /* Adjusted transition */
    transition: opacity 0.3s ease 0.3s, transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.3s, visibility 0s linear 0.6s;
}

.card-scene.is-flipped .quality-buttons {
    opacity: 1;
    visibility: visible;
    /* Final position: Overlap bottom by approx 30% */
    /* We need button height. Assume approx 3.5rem height including padding */
    /* 70% of height below = 0.7 * 3.5rem = 2.45rem */
    /* So bottom edge is -2.45rem from card scene bottom */
     bottom: -2.8rem; /* Push bottom edge down from card bottom */
     transform: translateX(-50%) translateY(0%); /* No Y translate needed if using bottom */
    /* OR adjust translateY method: */
    /* bottom: 0; */
    /* transform: translateX(-50%) translateY(calc(-1 * 0.3 * ButtonHeight)); */ /* Needs button height variable */
    /* Using bottom is often simpler */

    transition-delay: 0.3s, 0.3s, 0s;
}

.quality-btn {
    background: linear-gradient(145deg, var(--secondary-bg), var(--tertiary-bg));
    color: var(--text-primary);
    border: 1px solid rgba(255, 255, 255, 0.1);
    padding: 0.8rem 1.2rem; /* Use rem */
    border-radius: 1rem; /* Use rem */
    cursor: pointer;
    font-size: 1rem; /* Use rem */
    font-weight: 600;
    min-width: 7rem; /* Use rem */
    text-align: center;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1); /* Use smoother bezier curve */
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2); /* Enhanced shadow */

}
/* Apply updated gradient backgrounds with matching borders */
.quality-btn[data-quality="0"] { 
background: var(--btn-again); 
color: #fff;
box-shadow: var(--shadow-again);
border: 1px solid rgba(217, 83, 79, 0.4); 
}
.quality-btn[data-quality="1"] { 
background: var(--btn-hard); 
color: #fff;
box-shadow: var(--shadow-hard);
border: 1px solid rgba(240, 173, 78, 0.4);
}
.quality-btn[data-quality="2"] { 
background: var(--btn-good); 
color: #fff;
box-shadow: var(--shadow-good);
border: 1px solid rgba(52, 152, 219, 0.4);
}
.quality-btn[data-quality="3"] { 
background: var(--btn-easy); 
color: #fff;
box-shadow: var(--shadow-easy);
border: 1px solid rgba(46, 204, 113, 0.4);
}

/* Refined hover effects */
.quality-btn:hover:not(:disabled) {
    transform: translateY(-3px) scale(1.02); /* Subtler lift */
    color: white;
}

/* Button-specific hover effects */
.quality-btn[data-quality="0"]:hover:not(:disabled) {
    box-shadow: var(--shadow-again-hover);
}
.quality-btn[data-quality="1"]:hover:not(:disabled) {
    box-shadow: var(--shadow-hard-hover);
}
.quality-btn[data-quality="2"]:hover:not(:disabled) {
    box-shadow: var(--shadow-good-hover);
}
.quality-btn[data-quality="3"]:hover:not(:disabled) {
    box-shadow: var(--shadow-easy-hover);
}

        /* Optional: Add subtle pulse effect on hover */
.quality-btn:hover:not(:disabled)::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 150%;
    height: 150%;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    animation: pulse 0.8s ease-out;
}

@keyframes pulse {
    0% { transform: translate(-50%, -50%) scale(0); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 0; }
}

/* Fix text color on all buttons */
.quality-btn .key-hint { 
    display: block; 
    font-size: 0.75rem; 
    color: rgba(255, 255, 255, 0.8); /* Make ALL key hints white with slight transparency */
    margin-top: 0.3rem; 
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2); /* Add subtle text shadow for better readability */
}

                /* Select pill based on class on body/study-area */
        body.ai-panel-active .session-pill, /* If class is on body */
        .study-area.ai-panel-active ~ .session-pill /* If class is on study-area */
        {
            /* Move up slightly */
            transform: translateX(-50%) translateY(-15px);
        }

        /* --- Quality Buttons Adjustment (Hide when AI panel is active?) --- */
        /* Hide immediately when panel is active */
        .study-area.panel-active .quality-buttons {
            opacity: 0 !important;
            visibility: hidden !important;
            transition: none !important; /* No transition when hiding due to AI */
        }

        body.panel-active .quality-buttons {
            opacity: 0 !important;
            visibility: hidden !important;
            transition: none !important;
        }

/* === NEW SESSION COMPLETION V2 STYLES === */

.session-complete-overlay {
    position: fixed; /* Take over viewport */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--modal-overlay-bg); /* Use modal overlay bg */
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    z-index: 200; /* High z-index */
    display: flex; /* Use flex to center content */
    justify-content: center;
    align-items: center;
    padding: 2rem;
    opacity: 0; /* Animate appearance */
    visibility: hidden;
    transition: opacity 0.4s ease, visibility 0s linear 0.4s;
    padding-bottom: 10rem; /* Increase padding significantly */
}
/* State when shown by JS */
.session-complete-overlay.is-visible {
    opacity: 1;
    visibility: visible;
    transition-delay: 0s;
}

.completion-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2.5rem; /* Space between elements */
    text-align: center;
    max-width: 800px; /* Limit content width */
}

.completion-title {
    color: var(--text-primary);
    font-size: 2.5rem;
    font-weight: 600;
    text-shadow: 0 2px 10px rgba(0,0,0,0.5);
}

/* === Enhanced Completion Stats Grid === */
.completion-stats-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    width: 100%;
    max-width: 650px;
    margin: 0;
}

.stat-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    padding: 1.5rem 1rem;
    background: linear-gradient(145deg, rgba(44, 58, 86, 0.3), rgba(31, 42, 64, 0.05));
    border-radius: 25px;
    border: 1px solid rgba(74, 90, 126, 0.6);
    position: relative;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.25);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    min-height: 175px; /* Ensure consistent height */
}

/* Hover effects */
.stat-item:hover {
    transform: translateY(-5px);
    border-color: var(--hover-border-color);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4);
}

.stat-item:hover::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at center, rgba(255, 255, 255, 0.12), transparent 70%);
    pointer-events: none;
}

/* Icon container styling */
.stat-icon {
    width: 3rem;
    height: 3rem;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 1.2rem;
    transition: transform 0.3s ease, color 0.3s ease;
    position: relative;
    /* Ensure consistent vertical positioning */
    margin-top: 0.5rem;
}

.stat-icon svg {
    width: 2.4rem; /* More consistent icon size */
    height: 2.4rem;
    fill: currentColor;
    /* Center icons perfectly */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Type-specific icon colors */
.stat-cards .stat-icon { color: var(--accent-purple); }
.stat-time .stat-icon { color: var(--accent-red); }
.stat-accuracy .stat-icon { color: var(--accent-green); }

/* Type-specific hover glows */
.stat-cards:hover::after {
    background: radial-gradient(circle at center, rgba(150, 91, 222, 0.12), transparent 70%);
}
.stat-time:hover::after {
    background: radial-gradient(circle at center, rgba(240, 89, 78, 0.12), transparent 70%);
}
.stat-accuracy:hover::after {
    background: radial-gradient(circle at center, rgba(46, 204, 113, 0.12), transparent 70%);
}

.stat-item:hover .stat-icon {
    transform: scale(1.15);
    opacity: 1;
}

/* Value styling */
.stat-value {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-primary);
    line-height: 1;
    margin: 0.6rem 0;
    height: 2.5rem; /* Fixed height for better alignment */
    display: flex;
    align-items: center;
    justify-content: center;
}

.stat-value .unit {
    font-size: 1.2rem;
    margin-left: 0.2rem;
    opacity: 0.8;
    font-weight: 500;
}

/* Better label consistency */
.stat-label {
    font-size: 1rem;
    color: var(--text-secondary);
    margin-top: 0.6rem;
    transition: color 0.3s ease;
    text-align: center;
    height: 1.5rem; /* Fixed height to ensure alignment */
    display: flex;
    align-items: center;
    justify-content: center;
}
.stat-item:hover .stat-label {
    color: var(--text-primary);
}

/* Accuracy specific styling to match other stats */
.stat-accuracy .accuracy-container {
    position: relative;
    width: 90px;
    height: 90px;
    margin: 0.2rem 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

.accuracy-circle-bg,
.accuracy-circle {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 120%;
    height: 120%;
    transform: translate(-50%, -50%) rotate(-90deg);
    fill: none;
    stroke-width: 2;
}

.accuracy-circle-bg path {
    stroke: rgba(255, 255, 255, 0.12);
}

.accuracy-circle .accuracy-value-path {
    stroke: var(--accent-green);
    stroke-linecap: round;
    stroke-dasharray: 100 100;
    stroke-dashoffset: 25; /* Default to 75% - will be set by JS */
    transition: stroke-dashoffset 1.5s cubic-bezier(0.4, 0, 0.2, 1);
}

.stat-accuracy .stat-value {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1.7rem;
    margin: 0;
    z-index: 1;
    height: auto; /* Reset height for positioned element */
}

/* Time stat styling with better vertical alignment */
.stat-time .time-parts {
    display: flex;
    align-items: center; /* Changed from baseline to center */
    justify-content: center;
    height: 2.5rem; /* Match the height of other stat values */
}

.stat-time .time-part {
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    margin: 0 0.4rem;
}

.stat-time .time-value {
    font-size: 2rem;
    font-weight: 600;
    line-height: 1;
}

.stat-time .time-unit {
    font-size: 0.8rem;
    color: var(--text-secondary);
    margin-top: 0.2rem;
}

/* Ensure hover border effects match the stat colors */
.stat-cards:hover {
    border-color: var(--accent-purple);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4), 0 0 15px rgba(91, 192, 222, 0.2);
}

.stat-time:hover {
    border-color: var(--accent-red);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4), 0 0 15px rgba(240, 173, 78, 0.2);
}

.stat-accuracy:hover {
    border-color: var(--accent-green);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4), 0 0 15px rgba(46, 204, 113, 0.2);
}


/* --- Floating Action Buttons --- */
/* --- Floating Action Buttons (Adjust positioning) --- */
.completion-actions-floating {
    display: flex;
    justify-content: center;
    gap: 1.5rem;
    flex-wrap: wrap;
    /* Position relative to the *bottom* of the overlay content area */
    position: absolute; /* Change from static/relative */
    bottom: 2rem;      /* Position from the bottom of the overlay */
    left: 50%;
    transform: translateX(-50%);
    width: 90%;        /* Take up most of the width */
    max-width: 600px;  /* Limit max width */
    z-index: 205;      /* Above general content, below floating pill maybe */
}

.completion-btn-floating {
    display: inline-flex;
    align-items: center;
    gap: 0.6rem;
    padding: 0.8rem 1.8rem;
    border-radius: 50px; /* Pill shape */
    border: 1px solid var(--border-color);
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.25s ease;
    background: linear-gradient(145deg, var(--secondary-bg), var(--primary-bg));
    color: var(--text-secondary);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4);
}
.completion-btn-floating svg {
    width: 1.3rem;
    height: 1.3rem;
    fill: currentColor;
    opacity: 0.8;
}
.completion-btn-floating:hover {
    transform: translateY(-3px) scale(1.03);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);
    color: var(--text-primary);
    border-color: var(--hover-border-color);
}

/* Specific button styles and glows */
.completion-btn-floating.return:hover {
    /* Keep base hover or add subtle glow */
}

.completion-btn-floating.study-global { /* Blue */
    background: linear-gradient(145deg, var(--accent-blue), #0c5369ec);
    color: #fff;
    border-color: var(--accent-blue);
}
.completion-btn-floating.study-global:hover {
    color: #fff;
    border-color: #5bc0ff;
    box-shadow: 0 0 12px var(--quality-btn-good-glow), 0 0 20px var(--quality-btn-good-glow), 0 8px 20px rgba(0, 0, 0, 0.5);
}

.completion-btn-floating.study-other { /* Yellow */
    background: linear-gradient(145deg, var(--accent-yellow), #6c440deb);
    color: #fff;
    border-color: var(--accent-yellow);
}
.completion-btn-floating.study-other:hover {
    color: #fff;
    border-color: #f0be4e;
    box-shadow: 0 0 12px var(--star-glow-color), 0 0 20px var(--star-glow-color), 0 8px 20px rgba(0, 0, 0, 0.5);
}




/* --- Floating Other Materials Popup --- */
/* Position relative to the overlay */
/* --- Floating Other Materials Popup --- */
/* Position relative to the overlay */
.other-materials-popup-floating {
    position: absolute;
    /* Position it relative to the *new* floating pill's bottom */
    /* Pill bottom is approx 7rem, add some space (e.g., 1rem) */
    /* OR simpler: position higher up initially */
    /* bottom: 15%; */

    left: 50%;
    transform: translateX(-50%) translateY(20px); /* Start below */

    /* Keep other styling */
    padding: 1rem;
    background-color:  #101a31ef;
    border-radius: 12px;
    border: 1px solid var(--border-color);
    width: 90%;
    max-width: 380px;
    box-shadow: 0 6px 25px rgba(0,0,0,0.5);
    z-index: 208; /* Below pill, above action buttons */

    max-height: 0;
    overflow: hidden;
    opacity: 0;
    visibility: hidden;
    transition: max-height 0.4s ease-out,
                opacity 0.4s ease-out,
                transform 0.4s ease-out,
                visibility 0s linear 0.4s,
                bottom 0.4s ease-out; /* Animate position */
}
.other-materials-popup-floating.visible {
    max-height: 35vh; /* Adjust max height */
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(0);
    /* Adjust final position if needed */

    transition-delay: 0s;
    overflow-y: auto;
}


        /* --- Other Materials Popup --- */
        .other-materials-popup {
        margin-top: 1rem; /* Space above popup */
        padding: 1rem;
        background-color: var(--primary-bg); /* Darker background */
        border-radius: 8px;
        border: 1px solid var(--border-color);
        width: 90%;
        max-width: 350px; /* Limit popup width */
        margin-left: auto;
        margin-right: auto;

        /* Animation */
        max-height: 0;
        overflow: hidden;
        opacity: 0;
        transform: translateY(-10px); /* Start slightly up */
        visibility: hidden; /* Use visibility */
        transition: max-height 0.4s ease-out,
                opacity 0.4s ease-out,
                transform 0.4s ease-out,
                visibility 0s linear 0.4s, /* Hide visibility after transition */
                margin-top 0.4s ease-out,
                padding 0.4s ease-out;
        }
        .other-materials-popup.visible {
        max-height: 300px; /* Adjust max height as needed */
        opacity: 1;
        visibility: visible; /* Make visible */
        transform: translateY(0);
        margin-top: 1.5rem; /* Add margin when visible */
        padding: 1rem; /* Ensure padding is applied */
        transition-delay: 0s; /* Apply visible transitions immediately */
        overflow-y: auto; /* Allow scrolling within popup if needed */
        }

        .other-material-item {
        display: block;
        padding: 0.6rem 1rem;
        color: var(--text-primary);
        text-decoration: none;
        border-radius: 6px;
        margin-bottom: 0.5rem;
        transition: background-color 0.2s ease;
        text-align: left; /* Align text left */
        background-color: var(--secondary-bg); /* Background for items */
        border: 1px solid var(--border-color);
        }
        .other-material-item:hover {
        background-color: var(--tertiary-bg);
        color: var(--icon-hover-color);
        border-color: var(--hover-border-color);
        }
        .other-material-item span { /* Due count */
        float: right;
        font-size: 0.9em;
        color: var(--text-secondary);
        background-color: var(--primary-bg);
        padding: 0.1rem 0.4rem;
        border-radius: 4px;
        }
        .other-materials-popup p { /* For Loading/Error messages */
        color: var(--text-secondary);
        font-style: italic;
        }

                /* --- NEW: Custom Modal Styles --- */
                .modal-overlay {
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background-color: rgba(26, 26, 46, 0.7); /* Dark semi-transparent overlay */
                    display: none; /* Hidden by default */
                    justify-content: center;
                    align-items: center;
                    z-index: 1050; /* Above other elements but below system UI potentially */
                    backdrop-filter: blur(3px); /* Optional: blur background */
                    -webkit-backdrop-filter: blur(3px);
                    display: none; /* Start with display none */
                    opacity: 0; /* Add for transition */
                    visibility: hidden; /* Add for transition */
                    transition: opacity 0.3s ease, visibility 0s linear 0.3s; /* Add transition */
                }
                .modal-overlay.visible {
                    display: flex;
                    opacity: 1; /* Add for transition */
                    visibility: visible; /* Add for transition */
                    transition-delay: 0s; /* Add for transition */
                }
        
                .modal-content {
                    background-color: #1f2a40; /* Match container background */
                    padding: 25px 30px;
                    border-radius: 10px;
                    border: 1px solid #4a5a7e;
                    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
                    color: #e0e0e0;
                    max-width: 450px; /* Limit width */
                    width: 90%; /* Responsive width */
                    text-align: center;
                    animation: modal-fade-in 0.3s ease-out; /* Fade-in animation */
                    position: relative; /* Ensure it respects the overlay's z-index */
                    z-index: 2001; /* Optional: Explicitly higher than overlay bg if needed */
                }
        
                @keyframes modal-fade-in {
                    from { opacity: 0; transform: scale(0.95); }
                    to { opacity: 1; transform: scale(1); }
                }
        
        
                .modal-header {
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    margin-bottom: 20px;
                    gap: 10px;
                }
                .modal-header .modal-icon svg {
                    width: 28px;
                    height: 28px;
                }
                /* Specific icon colors */
                 .modal-icon.warning svg { fill: #f0ad4e; } /* Yellow for warning */
                 .modal-icon.error svg { fill: #d9534f; } /* Red for error */
        
                .modal-title {
                    font-size: 1.4em;
                    font-weight: bold;
                    color: #ffffff;
                    margin: 0; /* Reset margin */
                }
        
                .modal-message {
                    font-size: 1em;
                    line-height: 1.6;
                    margin-bottom: 25px;
                    color: #c0c0d0; /* Slightly lighter than main text */
                }
                .modal-message strong { /* Highlight chapter names */
                     color: #ffffff;
                     font-weight: 600;
                }
        
                .modal-actions {
                    display: flex;
                    justify-content: center; /* Center buttons */
                    gap: 15px;
                    margin-top: 10px;
                }
        
                /* Basic button style - adapt if you have global button styles */
                .modal-button {
                    padding: 10px 25px;
                    border-radius: 6px;
                    border: none;
                    cursor: pointer;
                    font-size: 0.95em;
                    font-weight: 500;
                    transition: background-color 0.2s ease, transform 0.1s ease;
                }
                .modal-button:hover {
                     transform: translateY(-1px);
                }
                .modal-button.primary { /* e.g., Confirm Delete */
                    background-color: #d9534f;
                    color: white;
                    box-shadow: 0 2px 5px rgba(217, 83, 79, 0.3);
                }
                .modal-button.primary:hover { background-color: #c9302c; }
        
                .modal-button.secondary { /* e.g., Cancel, OK */
                    background-color: #4a5a7e;
                    color: #e0e0e0;
                    border: 1px solid #6a7aac;
                }
                .modal-button.secondary:hover { background-color: #6a7aac; color: #ffffff; }

            /* --- Study Session Completion Screen Enhancements --- */

/* === NEW Styles for Compact Remaining Due Container === */
/* === NEW Styles for Compact Remaining Due Container === */
#completionRemainingDue {
    /* ... (keep existing flex, positioning, hidden state, transition) ... */
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    margin-top: 0rem;
    margin-bottom: rem;
    width: max-content;
    max-width: 90%;
    visibility: hidden;
    opacity: 0;
    transform: translateY(10px);
    transition: visibility 0s linear 0.5s, opacity 0.4s ease, transform 0.4s ease;
}
#completionRemainingDue.visible { /* ... (keep visible styles) ... */
    visibility: visible;
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0.2s, 0.2s, 0.2s;
}


/* Styling for the info block */
.remaining-due-info {
    display: inline-flex;
    /* --- Key change: Use align-items: baseline for better text alignment --- */
    align-items: baseline; /* Align text elements along their baseline */
    gap: 0.4rem; /* Slightly reduced gap for compactness */
    background-color: rgba(29, 27, 56, 0.08);
    /* --- Controlled Padding --- */
    padding: 0.5rem 0.9rem; /* Reduced vertical, adjusted horizontal padding */
    border-radius: 25px;
    border: 1px solid rgba(255, 255, 255, 0.15);
    color: var(--text-secondary);
    font-size: 0.9rem;
    line-height: 1.3; /* Ensure consistent line height for baseline alignment */
}

.remaining-due-icon {
    /* --- Controlled Size --- */
    width: 1.1rem; /* Explicit width */
    height: 1.1rem; /* Explicit height */
    fill: var(--accent-green);
    position: relative; /* Add this */
    top: 0.2rem; /* Fine-tune vertical alignment */
    margin-right: 0.2rem;
}

.remaining-due-count {
    font-size: 1.1rem; /* Slightly smaller than before, but still emphasized */
    font-weight: 700;
    color: var(--text-primary);
    line-height: inherit; /* Inherit line height for baseline alignment */
    min-width: auto; /* Remove min-width if not needed */
    text-align: right;
    padding: 0 0.1rem; /* Add tiny horizontal padding if needed */
}

.remaining-due-label {
    /* "due" text */
     line-height: inherit; /* Inherit line height */
     font-size: 0.85em; /* Slightly smaller label */
     margin-right: 0.3rem; /* Space before batch info */
}

.batch-info {
    /* margin-left: 0.5rem; */ /* Removed, rely on label's margin-right */
    font-size: 0.8em;
    opacity: 0.8;
    display: inline-flex;
    /* --- Align items within batch info itself --- */
    align-items: baseline; /* Align "(Batch:" text and input */
    gap: 0.3rem;
     line-height: inherit; /* Inherit line height */
}

/* Compact input field */
#studyRemainingBatchSizeInput {
    width: 50px; /* Keep small width */
    height: 30px; /* Keep small height */
    padding: 2px 4px; /* Keep small padding */
    font-size: 1em; /* Match surrounding batch-info text */
    border-radius: 4px;
    border: 1px solid var(--border-color);
    background-color: rgba(0, 0, 0, 0.2);
    color: var(--text-primary);
    text-align: center;
    /* --- Align input baseline --- */
    vertical-align: baseline;
     line-height: inherit; /* Inherit line height */
    /* Remove margin if gap handles spacing */
    /* margin-left: 0.1rem; */
}
#studyRemainingBatchSizeInput:focus { /* (keep focus styles) */
    background-color: var(--secondary-bg);
    border-color: var(--accent-blue);
    box-shadow: 0 0 0 2px rgba(91, 192, 222, 0.2);
    outline: none;
}

/* Study Remaining Button style (adjust as needed) */
.study-remaining-btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.6rem 1.2rem; /* Adjust padding */
    font-size: 0.95rem;
    font-weight: 600;
    border-radius: 25px; /* Match info block rounding */
    border: none;
    cursor: pointer;
    transition: all 0.2s ease;
    background: linear-gradient(145deg, var(--accent-green), #1f7a35);
    color: white;
    box-shadow: 0 3px 8px rgba(46, 204, 113, 0.25), 0 1px 2px rgba(0,0,0,0.15);
}
.study-remaining-btn svg { /* Icon styling */
    width: 1rem;
    height: 1.5rem;
    opacity: 0.9;
}
.study-remaining-btn:hover:not(:disabled) {
    background: linear-gradient(145deg, #3fcc5b, var(--accent-green));
    box-shadow: 0 5px 12px rgba(46, 204, 113, 0.35), 0 2px 3px rgba(0,0,0,0.2);
    transform: translateY(-1px);
}
.study-remaining-btn:disabled {
    background: var(--secondary-bg);
    color: var(--text-secondary);
    opacity: 0.7;
    cursor: not-allowed;
    box-shadow: none;
    transform: none;
}


/* Adjust floating action buttons and popup if needed */
.completion-actions-floating {
    /* Keep positioning relative to bottom */
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    width: 90%;
    max-width: 600px;
    z-index: 205; /* Ensure it's layered correctly */
    /* Add margin-top if space needed below remaining-due section */
    margin-top: 1.5rem;
}

.other-materials-popup-floating {
    /* Position relative to the action buttons */
    bottom: calc(2rem + 4rem + 1rem); /* ActionButtons_Bottom + Est_Button_Height + Spacing */
    left: 50%;
    transform: translateX(-50%) translateY(20px);
    z-index: 208; /* Below remaining section, above action buttons */
    /* Keep other styles */
}
.other-materials-popup-floating.visible {
    bottom: calc(2rem + 4rem + 1.5rem); /* Adjust final position */
    transform: translateX(-50%) translateY(0);
    /* Keep other styles */
}


        /* --- Responsiveness --- */
        @media (max-width: 1024px) { /* Adjust breakpoint */
            /* On smaller screens, maybe hide AI panel or make it overlay? */
            /* For now, let's make panel narrower */
            :root {
               --ai-panel-width: 45%;
            }
             .study-area.ai-panel-active .card-scene {
                 max-width: calc(100% - var(--ai-panel-width) - 1.5rem - 4rem); min-height: 27rem;
             }
       }
        @media (max-width: 900px) { /* Adjust breakpoint if needed */
             html { font-size: 16px; } /* Reduce base size slightly for tablets */
             .study-area { gap: 1.5rem; }
             .card-actions-column { width: 3.5rem; padding-top: 4rem;}
             .card-actions-column .icon-btn { width: 3rem; height: 3rem; }
             .card-actions-column .icon-btn svg { width: 1.4rem; height: 1.4rem; }
             .card-scene { min-height: 25rem; } /* Adjust card height */
             .card-face { min-height: 25rem; }
                 /* Stack card and panel */
    body.panel-active .study-area {
        flex-direction: column; /* Stack vertically */
        align-items: center; /* Center horizontally */
        gap: 1rem;
        padding-top: calc(var(--pill-height-approx) * 0.5); /* Reduced top padding */
    }
    body.panel-active .card-scene {
        order: 1; /* Card on top */
        flex-basis: auto; /* Reset basis */
        width: 90%; /* Take most width */
        height: 50vh; /* Approx half height */
        max-height: 50vh;
    }
    body.panel-active .ai-panel,
    body.panel-active .edit-panel {
        display: flex; /* <<< ADD THIS to make it visible and function as a flex container */
        order: 2; /* Panel below */
        position: relative; /* Unset fixed positioning */
        width: 90%; /* Take most width */
        height: 40vh; /* Approx half height */
        max-height: 40vh;
        left: auto; top: auto; right: auto; bottom: auto; /* Reset positioning */
        transform: scale(1) translateX(0); /* Reset transform */
        opacity: 1;
        margin-top: 1rem; /* Space between card and panel */
         transition: width 0.3s ease, height 0.3s ease, margin-top 0.3s ease; /* Faster transition */
             transition-delay: 0s; /* Apply transitions immediately */
    /* Transitions may need further tweaking if entry feels abrupt */
    }
    /* Hide action buttons columns when stacked */
    body.panel-active .card-actions-column {
        display: none;}
        }

        @media (max-width: 768px) {
             html { font-size: 15px; } /* Further reduce for smaller tablets/large phones */
             body { padding-top: 1rem; }
             .session-pill {
                 padding: 0.5rem 1rem;
                 gap: 1rem;
                 top: 0.8rem;
             }
             .session-stats { font-size: 0.85rem; gap: 0.8rem; }
             .session-controls .nav-btn { padding: 0.4rem 1rem; font-size: 0.85rem;}

            .study-area {
                 padding: 1rem 0.8rem;
                 padding-top: 5rem; /* Space below wrapped pill */
                 gap: 1rem;
             }
             .card-actions-column {
                 gap: 1rem;
             }
              .card-actions-left { order: 3; margin-top: 1rem; }
              .card-actions-right { order: 4; }

              .card-scene {
                width: 95%;
                order: 2;
                min-height: 26rem;
                position: relative;
                margin-left: auto;  /* Add these two properties */
                margin-right: auto; /* to center the card */
            }
            
             .card-face { min-height: 24rem; border-radius: 0.8rem;}

             .quality-buttons {
                position: relative;
                bottom: auto;
                left: auto;
                width: 100%;
                max-width: 100%;
                margin-top: 1.2rem;
                transform: none !important;
                opacity: 0;
                visibility: hidden;
                transition: opacity 0.3s ease 0.3s, visibility 0s linear 0.6s;
                order: 5;
                padding: 0.8rem 0;
                gap: 0.6rem;
            }

            
             .quality-btn { padding: 0.7rem 0.8rem; min-width: 4.5rem; font-size: 0.9rem; }
             .theorem-name { font-size: 1.6rem; }
             .explanation { font-size: 1rem; }
             .card-content-wrapper {
                padding-bottom: 0.5rem; /* Reduce padding for toggle button space */
            }
             .flip-prompt-btn { padding: 0.5rem 1.2rem; font-size: 0.85rem; bottom: 1rem;}
             .detail-toggle-container {
                padding: 0.8rem 0;
                margin-top: 0.8rem;
            }
            .card-scene.show-detailed .explanation-separator {
                width: 60%; /* Slightly wider on smaller screens */
                margin: 1.5rem auto;
            }
            .quality-buttons {
                transform: none !important; /* Still needed for non-absolute */
                transition: opacity 0.3s ease 0.3s; /* Only fade */
            }
            .card-scene.is-flipped .quality-buttons {
                opacity: 1;
                visibility: visible;
                /* No transform needed */
                transition-delay: 0.3s, 0s;
            }

                        /* Option 1: Panel overlays everything */
                        .study-area.ai-panel-active .ai-panel {
                            position: fixed; left: 0; top: 0;
                            width: 100%; height: 100%;
                            border-radius: 0; z-index: 200;
                            transform: translateX(0) scale(1);
                            max-height: 100vh; /* Override max-height */
                        }
                         .study-area.ai-panel-active .card-actions-column,
                         .study-area.ai-panel-active .card-scene {
                            opacity: 0;
                            pointer-events: none;
                            transition: opacity 0.3s ease;
                        }
     /* Mobile: Panel overlay */
     body.ai-panel-active .ai-panel {
        position: fixed; left: 0; top: 0;
        width: 100%; height: 100%;
        border-radius: 0; z-index: 200;
        transform: translateX(0) scale(1);
        max-height: 100vh;
        order: 100; /* Ensure it's on top */
    }
     body.ai-panel-active .card-actions-column, /* Hide both columns */
     body.ai-panel-active .card-scene {
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.3s ease;
    }
     body.ai-panel-active .session-pill {
        opacity: 0;
        pointer-events: none;
        transform: translateX(-50%) translateY(-150%);
        transition: transform 0.3s ease, opacity 0.3s ease;
    }
                 /* Ensure right column is properly hidden on mobile too */
     .study-area.ai-panel-active .card-actions-right {
        opacity: 0;
        width: 0;
        pointer-events: none;
        margin-left: 0; /* Reset margin */
        transform: none; /* Reset transform */
    }

    body.panel-active .card-scene { height: 45vh; max-height: 45vh; }
    body.panel-active .ai-panel,
    body.panel-active .edit-panel { height: 45vh; max-height: 45vh; }
    .session-complete-overlay {
        padding-bottom: 12rem; /* Increase padding more on mobile */
    }

    .completion-actions-floating {
        bottom: 1.5rem; /* Position lower on mobile */
        gap: 1rem;
    }
    .completion-btn-floating {
        padding: 0.7rem 1.5rem;
        font-size: 0.9rem;
    }

    #completionRemainingDue {
        bottom: 6rem; /* Adjust based on new action button position */
        width: 90%; /* Allow it to take width */
        padding: 0.6rem 1rem;
        gap: 8px;
        /* Allow wrapping inside if necessary, though nowrap is preferred */
        /* flex-wrap: wrap; */
        /* justify-content: center; */
    }
    #completionRemainingDue span { font-size: 0.85em; }
    #studyRemainingBatchSizeInput { width: 55px; }
    #studyRemainingDueBtn { font-size: 0.8em; }


    .other-materials-popup-floating {
         /* Adjust positioning for mobile */
         max-width: 90%;
    }
    .other-materials-popup-floating.visible {
         max-height: 30vh;
    }

    :root {
        --block-header-padding: 0.5em 0.6rem;
        --block-content-padding: 0.6rem 0.8rem;
    }
    .explanation-block-header { gap: 0.4rem; }
    .hint-button { font-size: 0.75em; padding: 0.15em 0.6em;}
    .toggle-icon-button { padding: 0.1em; }



    
        }

        @media (max-width: 480px) {
            html { font-size: 14px; } /* Smallest base size */
            body { padding-top: 6rem; } /* Ensure enough space if pill wraps to 2 lines */
            .session-stats { font-size: 0.8rem; }
            .quality-btn { padding: 0.6rem 0.6rem; min-width: 4rem; font-size: 0.8rem; }
            .card-actions-column .icon-btn { width: 2.8rem; height: 2.8rem; }
            .card-actions-column .icon-btn svg { width: 1.3rem; height: 1.3rem; }
            .card-scene { min-height: 24rem; }
            .card-face { min-height: 22rem; }
            .completion-stats-grid {
                grid-template-columns: 1fr; /* Stack stats vertically */
                gap: 1.5rem;
                max-width: 280px; /* Narrower width */
            }
            .stat-item { min-height: auto; } /* Allow height to adjust */
       
            #completionRemainingDue {
                bottom: 5.5rem;
                padding: 0.5rem 0.8rem;
                gap: 6px;
                /* Force wrapping if needed */
                flex-wrap: wrap;
                justify-content: center;
            }
            #completionRemainingDue span { white-space: normal; text-align: center; width: 100%; margin-bottom: 5px;}
       
       
            .completion-actions-floating {
                 bottom: 1rem;
                 gap: 0.8rem;
            }
        }